import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.mixture import GaussianMixture
import sklearn.metrics as sm
import pandas as pd
import numpy as np
iris_dataset = pd.read_csv('iris.csv')
iris_dataset['Targets'] = iris_dataset.Class.map({'Iris-setosa':0, 'Iris-versicolor':1, 'Iris-virginica':2})
x = iris_dataset[['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width']]
y = iris_dataset[['Targets']]
model = KMeans(n_clusters = 3)
model.fit(x)
print('Model Labels:\n',model.labels_)
gmm = GaussianMixture(n_components = 3)
gmm.fit(x)
y_gmm = gmm.predict(x)
print('GMM Labels:\n',y_gmm)
colormap = np.array(['red','lime','black'])
plt.figure(figsize = (10,10))
plt.subplot(2,2,1)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[y.Targets], s=40)
plt.title('Real Clustering')
plt.xlabel('Petal Length')
plt.ylabel('Petal Width')

plt.subplot(2,2,2)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[model.labels_], s=40)
plt.title('K Means Clustering')
plt.xlabel('Petal Length')
plt.ylabel('Petal Width')

plt.subplot(2,2,3)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[model.labels_], s=40)
plt.title('EM Clustering')
plt.xlabel('Petal Length')
plt.ylabel('Petal Width')

print('Completeness Score of K-means: %f' % sm.completeness_score(y.Targets, model.labels_))
print('Accuracy of K-Means :% f' %sm.accuracy_score(y.Targets,model.labels_))
print('\n')
print('Completeness Score of EM: %f' % sm.completeness_score(y.Targets,y_gmm))
print('Accuracy of EM:% f' %sm.accuracy_score(y.Targets,y_gmm))